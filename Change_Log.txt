131119_0000	Added event handlers.

131125_1610	Class 'nested' renamed to by 'element'.
131125_1610	$html, $attrs etc has been changed to $.html, $.attrs etc.
131125_1635	Now tieables could directly be assigned to the 'default' attribute of elements.
131125_1900	Two-way binding achieved through 'default' behaviors for html elements and text, checkbox and select-single controls.
131125_2150	Two-way binding achieved for select-multiple controls.

131128_1050	Assigning values directly to element.$.default is now supported.
131128_1150	*.load moved to *.$.load is now supported.
131128_1230	$.classes added.

131201_2250	A major redesign of the API.
131201_2250	Completed rewriting O_O.element.
131201_2250	'$' syntax is dumped, in favor of using functions.
131201_2250	Ties are renamed to plugs.

131202_0355	'trans' added.

131203_0100	O_O.default method added.
131203_0100	Two-way binding achieved.

131203_2000	Events got redone.

131204_2000	Added 'Intro' page, in order to serve both as a 'intro' and a 'demo'.

131209_0000	Hiding the page before rendering, achieved.

131211_0000	RequireJs wrapper discarded (moved for a more common global variable approach).
131211_0000	KISS now exports a global O_O.

131213_0000	jQuery got replaced by microDOM.

131215_1000	'examples' folder added to encourage evolving 'design' through examples.
131215_1000	Example 'Login' added.

131216_0000	O_O.object introduced.
131216_0100	input controls could get default values.
131216_0200	button controls could get default events.
131216_0300	O_O.element now has as a 'data' container in it; which could be accessed through the wrapper. Calling the wrapper without arguments gives contained data of its forms and data objects.
131216_0355	O_O.element now can 'digest' data.
131216_0800	arrays replace objects as the store for plugs.
131216_1000	'trans' completed.

131216_1950	cleaned the code up; some performance improvements done.

131217_1605	Version string added.

131218_0050	microDOM updated to v0.0.3.

131219_0100	DOM.ready replaced by O_O.ready
131219_0115	O_O.hide and O_O.show replaced by root.style.display = 'none'
131219_0115	watch introduced.

131219_0445	watch renamed to listen; as a new watch (with more features) is introduced.
131219_0815	'hider' is re-introduced to hide the elements with keyAttr until O_O.ready finishes executing.
131219_2200	Plugins introduced.
131219_2200	Plugin 'trans' with commons transes written.
131219_2355	O_O.element's wrapper interface got changed; it can now accept multiple arguments.
131219_2355	Plugin 'keyupText' written.

131220_0040	rewrite completed, ready to be merged into master.
131220_0050	rewrite branch merged to master.
131220_0235 v0.0.3 released.

131221_0400	got rid of require.js.
131221_0410	events aren't bound to the O_O.element anymore; 'this' refers to the DOMElement.

131222_0520	.repeat added.
131222_0600 Decided to reintroduce $ syntax, as functions could not have children with the names name, caller, length etc.

131223_0630	Re-adopted $ syntax. Renamed .element to .box and .repeat to .pod.
131223_0650	v0.0.4 released.
131223_0950 .remove added to .list.
131223_0950 .box.html now reloads the children.
131223_2000 .pod's events exposed.
131223_2100 event interface for .box and .pod standardized, with the value as the first param and the source as the second.
131223_2200 host got a new wrapper (O_O.host).
131223_2250 .box.$.el renamed to .box.$.at, as the previous now exposes the DOM element.
131223_2250 .box and .pod exposes their DOM element through $.el, this is for easing the process of DOM manipulation with other libraries. 
131223_2250 .box.$.$el exposes the DOM.$.element of .box.

131224_0400 item could now have children.
131224_0500 getElementById is now the default selector, as it performs better than querySelector.
131224_0650 data passed into the constructors are not modified any more.
131224_0710 every 'in' keyword is replaced by enumerate to improve performance.
131224_0900 getElementById has been removed as the selector doesn't allow some chars like $.
131224_0900 parents for .box and .pod exposed.
131224_1040 events support selector syntax; elements inside .box and .pod.items, could have their own even handlers assigned through selectors.
131224_0110 *.wrapper renamed to *.wrap.

131225_1100	data-binding within pod items achieved.
131225_1100	typos in Change_log.txt corrected.
131225_1430	.box.val modified to handle 'select' elements.
131225_1715	.trans now supports passing a third parameter to the trans function along with the val and the host.
131225_1725	.val now exposes a .prev property to get the previous value.
131225_2225	.list.count added.

131226_0055	.remove added for .box and .pod.
131226_0145	bug fixed: .pod.items now have the pod as their parent instead of the pod's box.
131226_0530	.list.wrap removed; .list.data added; .list.count renamed to .list.length.
131226_0530	box.digest got split into box.$ and box.$.set.
131226_0530	pod.digest renamed into pod.set.
131226_0850	the var 'self' referring to O_O got renamed to 'O_O' to enable the using of O_O within O_O.
131226_0915	basic state handling added through O_O.state.
131226_2250	.list.data can now handle both arrays and non arrays.

131227_0000	A todoMVC clone added to the examples.
131227_0000	Lots of bugs fixed.
131227_0700	Inline usage of O_O.trans discovered.
131227_1145	v0.0.5 released.
131227_1525	.pod.item.$.data introduced.

131228_0425	.pod.options.mode (allows to choose between 'append(default)' and  'prepend' new items) introduced.
131228_0525	microDOM updated to v.0.0.4.
131228_0735	the 'state' bug that caused a loading glitch got fixed.
131228_1020 .state extended to have .add, .remove, .set methods.
131228_1040 .list.reset added.

131229_0550 .box.$.default introduced as a bug fix.
131229_1200 .box'es internals tuned.
131229_1400 pluggables assigned to .box'es defaults now fire the respective events, when they are changed. This allows the manipulation of .box-es through .value-s. This also enables better co-ordination with server data (the element id could care about the CSS, where as the values name could correspond to the server data).
131229_1600 .list.reset introduced.

131230_0000 constructors are allowed to consume the passed objects.
131230_0000 .pod.item shold be a constructor function; simple objects are dropped in favor of simplicity and performance.
131230_0600 .box.$.default could have a default event.
131230_1200 lists don't support setting initial data through the constructor anymore.
131230_1400 tested the performance against that of angular, knockout and backbone.
131230_1500 autofocus bug fixed (hiding the elements causes them to lose focus, so the focus has to be set again)

131231_0000 tested various DOM tuning methods (node removal, fragments, HTML replacement etc), only to tune the existing methods.
131231_0905 hiding elements discarded (in favor of not-intruding into the UI flow, it has to be done at the UI layer).
131231_1000 .box'es init now gets the box as its argument.
131231_1010 .pod too has an init now.
131231_1245 v0.0.6 released.

140101_0240 O_O.state changed, to support nested routes with functions and params. .state shed .add, .remove and .list; in favor of a private 'resolve' function.
140101_0810 O_O.state improved, by adding .change and .set.
140101_1815 .box.text introduced (it allows safer content injection by preventing HTML injections).
140101_1815 .box.val sets the $.text instead of $.html.
140101_1830 .box.val returns the $.text on display elements.

140102_0755 .box'es constructor could have a 'clean' function.
140102_1635 .list doesn't need an id prop anymore.
140102_1940 .list items are sorted now.

140103_0750 automatic sort discarded, in favor of .list.order (the added order of items). As sorting items on the DOM level, is to be delegated to a 'sorter' plugin.
140103_0815 .list.length is a O_O.value now.
140103_1010 Bug fixed. Caused by calling .list.remove on non-existing items.
140103_1025 .list.data removed.
140103_1530 Performance improvement discovered. .pod.add was passing the item's id for creating a .box; now it passes the element instead, this cuts the time for searching for the node. This improves the performance by 12% (on 1000 todos).

140104_0900 .box.default sets the $.text on display elements.

140105_1010 performance improved by 5%, by caching the $el on loadChildren.
140105_1050 microDOM updated to v0.0.5.
140105_1230 .pod can now work with out a .list.
140105_1320 .pod.set removed.
140105_1330 .pod.event removed (a list has to be used if the events have to be watched for).
140105_1700 Bugs caused by detaching .list from .pod fixed.
140105_1755 .pod.order added.
140105_1800 .pod.event reintroduced with 'add' and 'remove' events (considered as it'll ease UI development)
140105_1910 .pod.refresh added (used tp refresh the data from the 'source list' after its order has been sorted (by a third part lib).
140105_1930 Bug fixed. .order of .list and .pod had type conversion errors (string <-> int); for type safety they have to be strings.
140105_2045 event dispatching in .box.default tweaked.
140105_2140 Bug fixed. .list's model.id-s weren't type-safe.
140105_2255 .list.add needs a model as it's parameter; it could assign an id to the model if an id isn't present in the parameter.

140106_1400 Started writing an auto-complete plugin.
140106_1600 Bug fixed. Loading the children after setting .box.html caused some errors; and so was removed.
140106_1915 .box.init is to be executed after applying $ properties.
140106_2010 Example plugin - AutoComplete done.
140106_2020 convention to add .BASE to the plugins introduced. It denotes the version of kiss the plug-in is based on.
140106_2025 v0.0.7 released.

140107_1600 Bug fixed. .box.$.val on elType '0' had undefined values for buttons.
140107_1830 Bug fixed. Error while setting strings as the defaults for .box-es.
140107_2120 Bug fixed. helper method 'extend' had some issues with looping.

140110_1220 Double quotes removed form get$el's selector string.
140110_1420 Bug fixed: State was set after the 'ready' function is fired, this caused some complexities. It's now moved before executing the ready function.
140110_1455 Bug fix revoked. Bug fix 0n 140110_1420 revoked.

140117_1945	Bug fixed. The listener syncing window.popstate with O_O.state is made to be set after O_O.ready, as the previous approach caused the state to change before O_O is 'ready'.

140119_0240	Bug fixed. At .list.addItem, the node has to be deep cloned.
140119_0320	Plugin O_O.texter added.

140127_0240	O_O.box.append added.
140127_0240	O_O.box.remove renamed to 'clear', O_O.box'es param $.clean renamed to $.clear.
140127_0245	O_O.box.remove now removes the specified child of the box.
140127_0430	O_O.pod.item added (to change the item-constructor).
140127_0430	Example - Collection, rewritten (to check the changes to O_O.pod).
140127_0455	Example - todoMVC(alt), fixed (to check the 'maintainability' of kiss - it took around 5 mins).
140127_2005	pod.item.$.modelId removed; items now have the id of their models as their own id. And they change along with the changes to the model. This was done in order to simplify the process.

140128_2140	O_O.list supports loading data while being constructed through options.data.

140129_0500	Structure of the items of O_O.list has been changed to Document Oriented DB(Mongo/Couch) style. From {id:id, data:{...}} to {_id:id, ...}.

140130_0445	Bug fixed. At O_O.list.add, assigning the _id to the primary key of sql result sets caused an error (as the primary keys are read only).

140208_1355	Bug fixed. Setting child.data removed form box.$.set.
140208_1435	Bug fixed. Missing O_O.pod.$ properties ($el, el, id) added from the pod's box.

140211_1000	Bug fixed. Bug fixed. box.$.set failed when the data had values for 'untouched' properties.
140211_1155	Calling $.event with just the name returns the handler. To turn off existing event a falsy value should be passed for the handler.

140214_0000	O_O.plugin.podSelect added.

140218_1140	Bug fixed. The items of O_O.pod were inserted to the DOM before the data is applied. Fixed it, by changing the sequence in O_O.pod.add.

140219_1920	Performance improvement: O_O.pod's listen on 'change' event, now applies only the changes to the item instead of all the data. This avoids re-setting unchanged properties.
140219_2000	Re-indented the code.
140219_2115	Bug fixed. In O_O.pod.add; adding an item without an _id caused troubles.

140220_2315	Added credits.

140221_0125	Removing an array of items using O_O.list.remove dropped (in order to keep the API's lower level)
140221_0200	Annotated the source.
140221_0340	Re-indented and cleaned up the examples.
140221_0340	Re-done the stale example 'State'.
140221_1530	Performance tweaks.
140221_1540	Bug fixed: .reset of O_O.pod and O_O.list had some issues with looping.
140221_1615	O_O.pod.options could now have a 'data' attribute to hold initial data.
140221_1855	O_O.pod.item rewritten. It doesn't reset the pod, but applies the changes quietly (doesn't raise add / remove events).
140221_1940	helper function O_O.pod.addExisting has been merged into O_O.source.
140221_2140	Bug fixed: In helper method O_O.pod.addItem, $.data was not defined when calling $.set.

140222_1710	Corrected typos on Change_Log.txt and Notes.md.
140222_1725	v0.0.8 released (on bug-fixes, performance tuning and new features).
